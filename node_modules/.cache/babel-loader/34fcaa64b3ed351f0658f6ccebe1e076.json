{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/nomadcoding/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { authService } from '../fBase';\nimport AppRouter from './AppRouter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    // 로그인이 되었나 확인하기 위한 메소드\n    // onAuthStateChanged는 로그인, 로그아웃될시 호출되는 메소드임,.\n    authService.onAuthStateChanged(user => {\n      console.log(user);\n\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn,\n      userObj: userObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this) : \"Initializing...\", /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"\\xA9 \", new Date().getFullYear(), \" Nwitter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"+8UWPZeDHvBWUbvjuGH9aya/3CQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/nomadcoding/src/components/App.js"],"names":["React","useState","useEffect","authService","AppRouter","App","init","setInit","isLoggedIn","setIsLoggedIn","userObj","setUserObj","onAuthStateChanged","user","console","log","Date","getFullYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZ;AACA;AACAC,IAAAA,WAAW,CAACS,kBAAZ,CAAgCC,IAAD,IAAQ;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAGA,IAAH,EAAQ;AACNJ,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,UAAU,CAACE,IAAD,CAAV;AACD,OAHD,MAGK;AACHJ,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACDF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KATD;AAUD,GAbQ,EAaN,EAbM,CAAT;AAcA,sBACA;AAAA,eACGD,IAAI,gBAAG,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEE,UAAvB;AAAmC,MAAA,OAAO,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAH,GAA4D,iBADnE,eAEE;AAAA,0BAAgB,IAAIM,IAAJ,GAAWC,WAAX,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADA;AAMD;;GAxBQZ,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { authService } from '../fBase';\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=>{\n    // 로그인이 되었나 확인하기 위한 메소드\n    // onAuthStateChanged는 로그인, 로그아웃될시 호출되는 메소드임,.\n    authService.onAuthStateChanged((user)=>{\n      console.log(user)\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj(user);\n      }else{\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    })\n  }, [])\n  return (\n  <>\n    {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing...\"}\n    <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n  </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}