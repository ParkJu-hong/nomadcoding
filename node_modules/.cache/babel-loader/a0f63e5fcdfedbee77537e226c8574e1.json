{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/nomadcoding/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { authService } from '../fBase';\nimport AppRouter from './AppRouter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    // 로그인이 되었나 확인하기 위한 메소드\n    // onAuthStateChanged는 로그인, 로그아웃될시 호출되는 메소드임,.\n    // 또한 어플리케이션이 초기화됐을때\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setUserObj(user);\n      } // init은 항상 true\n\n\n      setInit(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: Boolean(userObj),\n      userObj: userObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this) : \"Initializing...\"\n  }, void 0, false);\n}\n\n_s(App, \"MnyeGrlhPvU1cukhZ8rq3OZcfxw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/nomadcoding/src/components/App.js"],"names":["React","useState","useEffect","authService","AppRouter","App","init","setInit","userObj","setUserObj","onAuthStateChanged","user","Boolean"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZ;AACA;AACA;AACAC,IAAAA,WAAW,CAACO,kBAAZ,CAAgCC,IAAD,IAAQ;AACrC,UAAGA,IAAH,EAAQ;AACNF,QAAAA,UAAU,CAACE,IAAD,CAAV;AACD,OAHoC,CAIrC;;;AACAJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAND;AAOD,GAXQ,EAWN,EAXM,CAAT;AAYA,sBACA;AAAA,cAEGD,IAAI,gBAAG,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEM,OAAO,CAACJ,OAAD,CAA9B;AAAyC,MAAA,OAAO,EAAEA;AAAlD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAkE;AAFzE,mBADA;AAOD;;GAtBQH,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { authService } from '../fBase';\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=>{\n    // 로그인이 되었나 확인하기 위한 메소드\n    // onAuthStateChanged는 로그인, 로그아웃될시 호출되는 메소드임,.\n    // 또한 어플리케이션이 초기화됐을때\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setUserObj(user);\n      }\n      // init은 항상 true\n      setInit(true);\n    })\n  }, [])\n  return (\n  <>\n    {/* userObj가 있다면 로그인되고 userObj가 없다면 로그인 되지 않음 */}\n    {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n    {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n  </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}