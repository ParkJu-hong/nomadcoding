{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/nomadcoding/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport { dbService } from \"fBase\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    userObj\n  } = _ref;\n  // \n  console.log(userObj);\n  const [text, setText] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n\n  const getNweets = async () => {\n    const dbNweets = await dbService.collection(\"nweets\").get();\n    dbNweets.forEach(docu => {\n      const nweetObject = { ...docu.data(),\n        id: docu.id,\n        creatorId: 1231\n      };\n      setNweets(prev => [nweetObject, ...prev]);\n    });\n  };\n\n  useEffect(() => {\n    getNweets();\n  }, []);\n\n  const onSubmit = async event => {\n    // 페이지 렌더링 못하도록 막는 함수 \n    event.preventDefault(); // nweets이란 데이터베이스 컬렉션에 document를 추가하는 함수 \n\n    await dbService.collection(\"nweets\").add({\n      // nweet: nweet\n      text,\n      createdAt: Date.now() // 로그인한사람이 누군지 알기위한 함수호출\n\n    });\n    setText(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setText(value);\n  };\n\n  console.log(nweets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxLength: 120,\n        value: text,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\",\n        onClick: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nweets.map(nweet => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: nweet.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, nweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"r5WphXZrPdX1il4oTLAU6rhOLZI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/nomadcoding/src/routes/Home.js"],"names":["dbService","React","useState","useEffect","Home","userObj","console","log","text","setText","nweets","setNweets","getNweets","dbNweets","collection","get","forEach","docu","nweetObject","data","id","creatorId","prev","onSubmit","event","preventDefault","add","createdAt","Date","now","onChange","target","value","map","nweet"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,IAAI,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMb,SAAS,CAACc,UAAV,CAAqB,QAArB,EAA+BC,GAA/B,EAAvB;AAGAF,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,IAAI,IAAI;AACrB,YAAMC,WAAW,GAAG,EAChB,GAAGD,IAAI,CAACE,IAAL,EADa;AAEhBC,QAAAA,EAAE,EAAEH,IAAI,CAACG,EAFO;AAGhBC,QAAAA,SAAS,EAAE;AAHK,OAApB;AAKAV,MAAAA,SAAS,CAAEW,IAAD,IAAU,CAACJ,WAAD,EAAc,GAAGI,IAAjB,CAAX,CAAT;AACH,KAPD;AAQH,GAZD;;AAaAnB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9B;AACAA,IAAAA,KAAK,CAACC,cAAN,GAF8B,CAG9B;;AACA,UAAMzB,SAAS,CAACc,UAAV,CAAqB,QAArB,EAA+BY,GAA/B,CAAmC;AACrC;AACAlB,MAAAA,IAFqC;AAGrCmB,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAH0B,CAIrC;;AAJqC,KAAnC,CAAN;AAOApB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAZD;;AAaA,QAAMqB,QAAQ,GAAIN,KAAD,IAAW;AACxB,UAAM;AAAEO,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,QAAwBR,KAA9B;AACAf,IAAAA,OAAO,CAACuB,KAAD,CAAP;AACH,GAHD;;AAIA1B,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,sBACI;AAAA,4BACI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,sBAFhB;AAGI,QAAA,SAAS,EAAE,GAHf;AAII,QAAA,KAAK,EAAEF,IAJX;AAKI,QAAA,QAAQ,EAAEsB;AALd;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,OAAO,EAAEP;AAHb;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAA,gBAAMb,MAAM,CAACuB,GAAP,CAAYC,KAAD,iBAAU;AAAA,+BACvB;AAAA,oBAAKA,KAAK,CAAC1B;AAAX;AAAA;AAAA;AAAA;AAAA;AADuB,SAAU0B,KAAK,CAACd,EAAhB;AAAA;AAAA;AAAA;AAAA,cAArB;AAAN;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA9DD;;GAAMhB,I;;KAAAA,I;AA+DN,eAAeA,IAAf","sourcesContent":["import { dbService } from \"fBase\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Home = ({ userObj }) => {\n    // \n    console.log(userObj);\n    const [text, setText] = useState(\"\");\n    const [nweets, setNweets] = useState([]);\n\n    const getNweets = async () => {\n        const dbNweets = await dbService.collection(\"nweets\").get();\n        \n\n        dbNweets.forEach(docu => {\n            const nweetObject = {\n                ...docu.data(),\n                id: docu.id,\n                creatorId: 1231\n            }\n            setNweets((prev) => [nweetObject, ...prev])\n        })\n    }\n    useEffect(() => {\n        getNweets();\n    }, [])\n\n    const onSubmit = async (event) => {\n        // 페이지 렌더링 못하도록 막는 함수 \n        event.preventDefault();\n        // nweets이란 데이터베이스 컬렉션에 document를 추가하는 함수 \n        await dbService.collection(\"nweets\").add({\n            // nweet: nweet\n            text,\n            createdAt: Date.now(),\n            // 로그인한사람이 누군지 알기위한 함수호출\n\n        });\n        setText(\"\")\n    };\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setText(value);\n    };\n    console.log(nweets);\n    return (\n        <div>\n            <form>\n                <input\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                    value={text}\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Nweet\"\n                    onClick={onSubmit}\n                />\n            </form>\n            <div>{nweets.map((nweet)=> <div key={nweet.id}>\n                <h4>{nweet.text}</h4>\n            </div>)}</div>\n        </div>\n    )\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}