{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/nomadcoding/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { authService } from '../fBase';\nimport AppRouter from './AppRouter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  console.log('firebase : ', authService);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"\\xA9 \", new Date().getFullYear(), \" Nwitter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/nomadcoding/src/components/App.js"],"names":["React","useState","authService","AppRouter","App","isLoggedIn","setIsLoggedIn","console","log","Date","getFullYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,WAA3B;AACA,sBACA;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,0BAAgB,IAAII,IAAJ,GAAWC,WAAX,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADA;AAMD;;GATQN,G;;KAAAA,G;AAWT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { authService } from '../fBase';\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  console.log('firebase : ', authService);\n  return (\n  <>\n    <AppRouter isLoggedIn={isLoggedIn} />\n    <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n  </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}