{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/nomadcoding/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport { dbService } from \"fBase\";\nimport React, { useState, useEffect } from \"react\";\nimport Nweet from '../components/Nweet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    userObj\n  } = _ref;\n  // \n  console.log(userObj);\n  const [text, setText] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    // 실시간 리얼타임\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    // 페이지 렌더링 못하도록 막는 함수 \n    event.preventDefault(); // nweets이란 데이터베이스 컬렉션에 document를 추가하는 함수 \n\n    await dbService.collection(\"nweets\").add({\n      // nweet: nweet\n      text,\n      createdAt: Date.now(),\n      // 로그인한사람이 누군지 알기위한 함수호출\n      creatorId: userObj.uid\n    });\n    setText(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setText(value);\n  };\n\n  console.log(nweets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxLength: 120,\n        value: text,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\",\n        onClick: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nweets.map(nweet => {\n        console.log(\"nweet.createId : \", nweet);\n        console.log(\"userObj.uid : \".userObj.uid);\n        return /*#__PURE__*/_jsxDEV(Nweet, {\n          nweetObj: nweet,\n          isOwner: nweet.createId === userObj.uid\n        }, nweet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"r5WphXZrPdX1il4oTLAU6rhOLZI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/nomadcoding/src/routes/Home.js"],"names":["dbService","React","useState","useEffect","Nweet","Home","userObj","console","log","text","setText","nweets","setNweets","collection","onSnapshot","snapshot","nweetArray","docs","map","doc","id","data","onSubmit","event","preventDefault","add","createdAt","Date","now","creatorId","uid","onChange","target","value","nweet","createId"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,IAAI,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAH,IAAAA,SAAS,CAACa,UAAV,CAAqB,QAArB,EAA+BC,UAA/B,CAA2CC,QAAD,IAAc;AACpD,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC3CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADmC;AAE3C,WAAGD,GAAG,CAACE,IAAJ;AAFwC,OAAV,CAAlB,CAAnB;AAIAT,MAAAA,SAAS,CAACI,UAAD,CAAT;AACH,KAND;AAOH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMM,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9B;AACAA,IAAAA,KAAK,CAACC,cAAN,GAF8B,CAG9B;;AACA,UAAMxB,SAAS,CAACa,UAAV,CAAqB,QAArB,EAA+BY,GAA/B,CAAmC;AACrC;AACAhB,MAAAA,IAFqC;AAGrCiB,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAH0B;AAIrC;AACAC,MAAAA,SAAS,EAAEvB,OAAO,CAACwB;AALkB,KAAnC,CAAN;AAOApB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAZD;;AAaA,QAAMqB,QAAQ,GAAIR,KAAD,IAAW;AACxB,UAAM;AAAES,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,QAAwBV,KAA9B;AACAb,IAAAA,OAAO,CAACuB,KAAD,CAAP;AACH,GAHD;;AAIA1B,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,sBACI;AAAA,4BACI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,sBAFhB;AAGI,QAAA,SAAS,EAAE,GAHf;AAII,QAAA,KAAK,EAAEF,IAJX;AAKI,QAAA,QAAQ,EAAEsB;AALd;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,OAAO,EAAET;AAHb;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAA,gBACKX,MAAM,CAACO,GAAP,CAAYgB,KAAD,IAAW;AACnB3B,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC0B,KAAjC;AACA3B,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAkBF,OAAlB,CAA0BwB,GAAtC;AACA,4BAAO,QAAC,KAAD;AAEH,UAAA,QAAQ,EAAEI,KAFP;AAGH,UAAA,OAAO,EAAEA,KAAK,CAACC,QAAN,KAAmB7B,OAAO,CAACwB;AAHjC,WACEI,KAAK,CAACd,EADR;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OAPA;AADL;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAhED;;GAAMf,I;;KAAAA,I;AAiEN,eAAeA,IAAf","sourcesContent":["import { dbService } from \"fBase\";\nimport React, { useState, useEffect } from \"react\";\nimport Nweet from '../components/Nweet';\n\nconst Home = ({ userObj }) => {\n    // \n    console.log(userObj);\n    const [text, setText] = useState(\"\");\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        // 실시간 리얼타임\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }))\n            setNweets(nweetArray);\n        })\n    }, [])\n\n    const onSubmit = async (event) => {\n        // 페이지 렌더링 못하도록 막는 함수 \n        event.preventDefault();\n        // nweets이란 데이터베이스 컬렉션에 document를 추가하는 함수 \n        await dbService.collection(\"nweets\").add({\n            // nweet: nweet\n            text,\n            createdAt: Date.now(),\n            // 로그인한사람이 누군지 알기위한 함수호출\n            creatorId: userObj.uid\n        });\n        setText(\"\")\n    };\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setText(value);\n    };\n    console.log(nweets);\n    return (\n        <div>\n            <form>\n                <input\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                    value={text}\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Nweet\"\n                    onClick={onSubmit}\n                />\n            </form>\n            <div>\n                {nweets.map((nweet) => {\n                    console.log(\"nweet.createId : \", nweet);\n                    console.log(\"userObj.uid : \". userObj.uid);\n                    return <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.createId === userObj.uid} />\n                }\n                )}\n            </div>\n        </div>\n    )\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}